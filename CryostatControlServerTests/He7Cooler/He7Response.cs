// <autogenerated/>
using System;
using System.Collections.Generic;

namespace CryostatControlServerTests.He7Cooler
{
    /// <summary>
    /// Fakes the Agilent device connected to the He7Cooler
    /// Uses some very ugly code.
    /// </summary>
    class He7ResponseGenerator
    {
        public Dictionary<int, double> responsevalues { get; set; } = new Dictionary<int, double>();

        private int state = 0;

        public void ListenToAny(string command)
        {
            if (command.StartsWith("ROUT:SCAN"))
            {
                this.state = 1;
                this.ListenToReadCommand(command);
            }

            if (command.StartsWith("*OPC"))
            {
                this.state = 2;
            }
        }

        public void ListenToReadCommand(string command)
        {
            string[] parts = command.Split(new[] { ',', '$', '\n', '@', ')' });
            foreach(var part in parts)
            {
                try
                {
                    int channel = int.Parse(part);
                    if (!this.responsevalues.ContainsKey(channel)) this.responsevalues[channel] = 0.0;
                }
                catch (Exception)
                {
                    //ignore
                }
            }
        }

        public string RespondToRead()
        {
            switch(this.state)
            {
                case 2: return "1";
                case 1:
                    string response = "";
                    foreach (var pair in this.responsevalues)
                    {
                        response += $"{pair.Value:0.000},{pair.Key},";
                    }
                    response = response.TrimEnd(',');
                    return response;
            }
            return "1";
        }

    }
}
