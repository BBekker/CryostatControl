// <auto-generated />
// ignore stylecop
using System;
using System.Threading;

namespace CryostatControlServer
{
    using CryostatControlServer.He7Cooler;
    using CryostatControlServer.LakeShore;

    class Program
    {




        private bool run = true;

        //static void Main(string[] args)
        //{
        //    new Program();
        //}

        Program()
        {
            
            Console.Out.WriteLine("Press enter to start...");
            Console.In.ReadLine();


            //            H7 cooler test thread
            Thread H7CoolerThread = new Thread(new ThreadStart(() =>
            {
                

                He7Cooler.He7Cooler cooler = new He7Cooler.He7Cooler();
                
                cooler.Connect("192.168.1.100");
                Thread.Sleep(2000);
                while (true)
                {
                    
                    Console.WriteLine("HE3plate {0}K, He4Plate: {1}K, H3PumpT: {2}K", cooler.He3HeadT.Value, cooler.He4HeadT.Value, cooler.He3PumpT.Value);
                    Thread.Sleep(1000);
                }
               


            }));
            H7CoolerThread.Start();

            Thread LakeShoreThread = new Thread(new ThreadStart(() =>
            {
                LakeShore.LakeShore ls = new LakeShore.LakeShore();
                ls.Init("COM6");
                var sensorA = new Sensor(SensorEnum.Sensor1,ls);
                var sensorB = new Sensor(SensorEnum.Sensor2,ls);
                while (run)
                {
                    double t1 = sensorA.Value;
                    double t2 = sensorB.Value;
                    Console.WriteLine("Temp 1: {0}K, Temp 2: {1}K", t1, t2);
                    Thread.Sleep(1000);

                }
                ls.Close();
            }));
            LakeShoreThread.Start();


            Console.In.ReadLine();
            run = false;
            H7CoolerThread.Abort();

        }



    }
}